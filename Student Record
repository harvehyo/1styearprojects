#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 3

typedef struct stude {
char name[31];
int q1,q2,q3;
} REC;
REC student[MAX]; // ARRAYS OF STRUCTURES
int last;

// Declare Functions
int isfull();
int isempty();
int locate(char n[31]);
void add(REC st);
void del(char n[31]);
void display();
int menu();
float avg(int a, int b, int c);
void save();
void retreive();
void update(char n[31]);

int main(){
REC sr; // STRUCTURE VARIABLE
retreive();
last = -1;
while (1){
    switch(menu()){
      case 1 : system("cls");printf("Insert Data Mode\n");
               printf("Input name: ");scanf("%s", sr.name);
               printf("Input Quiz1: ");scanf("%d", &sr.q1);
               printf("Input Quiz2: ");scanf("%d", &sr.q2);
               printf("Input Quiz3: ");scanf("%d", &sr.q3);
               add(sr);break;
      case 2 : system("cls");printf("Update data Mode\n");
               printf("Input name: ");scanf("%s",sr.name);update(sr.name);break;
      case 3 : system("cls");printf("Delete data Mode\n");
               printf("Input name: ");scanf("%s",sr.name);del(sr.name);break;
      case 4 : display();break;
      case 5 : save(); exit(0);
      default: printf("1 to 4 lang!!!\n");system("pause");

    }
}
return 0;
}
int menu(){
int act;
system("cls");
printf("MENU\n");
printf("1. Add record\n");
printf("2. Update record\n");
printf("3. Delete record\n");
printf("4. Display\n");
printf("5. Exit\n");
printf("Input Action(1-5): ");
scanf("%d",&act);
return (act);
}
void add(REC st){
if (isfull()){
    printf("Array is full.\n");
    system("pause");
  }
else {
    last++;
    student[last]=st;
    }
}

int isfull(){
return(last==MAX-1);
}

int isempty(){
return(last==-1);
}

void update(char n[31]) {
int i,p;
if (isempty()){
    printf("Array is empty.\n");
    system("pause");
}
else {
    p = locate(n);
    if (p<0){
        printf("Not found.\n");
        system("pause");
    }
    else {
        printf("Name %s\n",student[p].name);
        printf("Quiz 1 %d\n",student[p].q1);
        printf("Quiz 2 %d\n",student[p].q2);
        printf("Quiz 3 %d\n",student[p].q3);
        system("pause");
      }
   }
}

void del(char n[31]){
int i,p;
if (isempty()){
    printf("Array is empty.\n");
    system("pause");
}
else {
    p = locate(n);
    if (p<0){
        printf("Not found.\n");
        system("pause");
    }
    else {
    for (i=p;i<last;i++){
        student[i]=student[i+1];
      }
    last--;
   }
 }
}
int locate(char n[31]){
int i;
for(i=0;i<=last;i++){
    if(strcmp(n,student[i].name)==0)
        return i;
 }
 return -1;
}

float avg(int a, int b, int c){
 return((a+b+c)/3.0);
}

void display(){
int i;
float ave;
system("cls");
printf("  NAME\t\tQuiz1\tQuiz2\tQuiz3\tAverage\tRemarks\n");
for(i=0;i<=last;i++){
    ave = avg(student[i].q1,student[i].q2,student[i].q3);
    printf("%d.) %s\t%d\t%d\t%d\t%6.2f\t%s\n",i+1,student[i].name,student[i].q1,student[i].q2,student[i].q3,ave,ave>=75.0? "Passed":"Failed");
}
system("pause");
}

void save() {
FILE *fp;
int i;
fp = fopen("bscsns2ab.txt","w+");
if (fp==NULL) {
    printf("File Error.\n");
    system("pause");
}
else {
    for (i=0;i<=last;i++)
        fprintf(fp,"%s\n%d\n%d\n%d\n",student[i].name,student[i].q1,student[i].q2,student[i].q3);
}
fclose(fp);
}


void retreive(){
FILE *fp;
int i;
REC rs;
float avrg;
fp = fopen("bscsns2ab.txt","r+");
if (fp==NULL) {
    printf("File Error.\n");
    system("pause");
}
else {
    while(!feof(fp)) {
        fscanf(fp,"%s\n%d\n%d\n%d\n",rs.name,rs.q1,rs.q2,rs.q3);
        add(rs);
    }

    }
fclose(fp);
}
